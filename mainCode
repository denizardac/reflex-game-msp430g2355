;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file

;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have references to current section.

;-------------------------------------------------------------------------------
RESET   	mov.w   #__STACK_END,SP         ; Initialize stack pointer
StopWDT 	mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer

;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
	mov.w #0, r4

	bic.b #11111110b, &P1SEL  ; make P1.1, 2, 3, 4, 5, 6 and 7 Digital I/O
	bic.b #11111110b, &P1SEL2 ; make P1.1, 2, 3, 4, 5,  6 and 7 Digital I/O
	bic.b #11110101b, &P2SEL  ; make P2.0 and 2.2 , 2.4 , 2.5 , 2.6 and 2.7 Digital I/O
	bic.b #11110101b, &P2SEL2 ; make P2.0 , 2.2 , 2.4 , 2.5 and , 2.6 , 2.7 Digital I/O

	bis.b #10110010b, &P1DIR ; make P1.1, 1.4, 1.5, and 1.7 output
	bis.b #11010101b, &P2DIR ; make P2.0 , 2.2 , 2.4 , 2.6, 2.7 output

	bis.b #10110010b, &P1OUT ; All segments OFF
	bis.b #01000101b, &P2OUT ; All segments OFF

    bic.b #00001000b, &P1DIR ; make P1.3 input
	bis.b #00001000b, &P1REN ; enable pull-up resistor for P1.3
    bis.b #00001000b, &P1OUT ; use pull up resistor for reset game button

    bic.b #00100000b, &P2DIR ; Make P2.5 Input
	bis.b #00100000b, &P2REN ; enable pull-up resistor for P2.5
	bis.b #00100000b, &P2OUT ; use pull up resistor for player button 2

    bic.b #00000100b, &P1DIR ; make P1.2 input
	bis.b #00000100b, &P1REN ; enable pull-up resistor for P1.2
    bis.b #00000100b, &P1OUT ; use pull up resistor for player button 1

    bis.w #GIE, SR 			 ; enable interrupts

    bic.b #00000100b, &P1IFG
    bic.b #00100000b, &P2IFG ; clear ifs

    bis.b #00000100b, &P1IES ; p1.2 interrupts from H to L
    bis.b #00000100b, &P1IE  ; enable p1.2 interrupt

    bis.b #00100000b, &P2IES ; p2.5 interrupts from H to L
    bis.b #00100000b, &P2IE  ; enable p2.5 interrupt


	bic.b #BIT4|BIT7, &P2OUT ; Turn off LEDs on 2.4 and 2.7

GameMaster:
	mov.w #0, r4
	mov.w #0, r6

	CALL #oneSecondDelay
	cmp.w #1, r8
	jeq gameOn
	CALL #oneSecondDelay
	cmp.w #1, r8
	jeq gameOn
	CALL #oneSecondDelay ; toplam 3sn delay her restarttan sonra
	cmp.w #1, r8
	jeq gameOn

gameOn:
	mov.w #0, r8
	bic.b #BIT4|BIT7, &P2OUT ; Turn off LEDs on 2.4 and 2.7

	bis.b #10110010b, &P1OUT ; turn off all lights. - for numbers
	bis.b #01000101b, &P2OUT ; turn off all lights. - for numbers

number3:
	mov.w #3, r6 ; hangi sayida oldugumuzu anlat r6

	cmp.w #1, r4 ; kazanan player var mi varsa hangisi bu r4 hep
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	bis.b #10110010b, &P1OUT ; turn off all lights. for numbers
	bis.b #01000101b, &P2OUT ; turn off all lights. for numbers

	bic.b #BIT1|BIT4|BIT5, &P1OUT
	bic.b #BIT2|BIT6, &P2OUT ; turn on lights for number 3

	CALL #oneSecondDelay
	cmp.w #1, r8 ; reset butonumuz 1.3 basildi mi
	jeq gameOn

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	jmp number2

number2:
	mov.w #2, r6

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	bis.b #10110010b, &P1OUT ; turn off all lights. for numbers
	bis.b #01000101b, &P2OUT ; turn off all lights. for numbers

	bic.b #BIT1|BIT5|BIT7,&P1OUT
	bic.b #BIT2|BIT6,&P2OUT ; turn on lights for number 2

	CALL #oneSecondDelay
	cmp.w #1, r8
	jeq gameOn

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	jmp number1

number1:
	mov.w #1, r6

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	bis.b #10110010b, &P1OUT ; turn off all lights. for numbers
	bis.b #01000101b, &P2OUT ; turn off all lights. for numbers

	bic.b #BIT1|BIT4,&P1OUT ; turn on lights for number 1

	CALL #oneSecondDelay
	cmp.w #1, r8
	jeq gameOn

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	jmp dash


dash:
	mov.w #0, r6

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	bis.b #10110010b, &P1OUT ; turn off all lights. for numbers
	bis.b #01000101b, &P2OUT ; turn off all lights. for numbers

	bic.b #BIT2,&P2OUT ; turn on lights for a dash

	CALL #oneSecondDelay
	cmp.w #1, r8
	jeq gameOn
	CALL #oneSecondDelay
	cmp.w #1, r8 ; reset butonu kontrolu bu r8 hep
	jeq gameOn
	CALL #oneSecondDelay
	cmp.w #1, r8
	jeq gameOn

	cmp.w #1, r4
	jeq GameMaster
	cmp.w #2, r4
	jeq GameMaster

	jmp GameMaster ; no one hit the buttons so go gameMaster main menu

oneSecondDelay: ; 1 saniyelik delay
	mov.w #0, r8
	mov.w #0xFFFF, r5
Delay:
	mov.w #1, r9 ; bos
	mov.w #3, r9 ; zaman gecsin diye 1 sn
	bit.b #00001000b , &P1IN
	jeq go
	sub.w #1,r5
	jne Delay
	jmp babadon

go:
	mov.w #1,r8

babadon: ; don geldigin yere
	ret

PLR_1: ; p1.2 butonu
	cmp.w #2, r4 ; diger oyuncu kazandiysa
	jeq ifPlayer2Won

	cmp.w #3, r6
	jeq player2Winsbynotpressing

	cmp.w #2, r6
	jeq player2Winsbynotpressing

	cmp.w #1, r6
	jeq player2Winsbynotpressing

	cmp.w #0, r6 ; dash
	jeq player1Winsbypressing

player1Winsbypressing:
	mov.w #1, r4
	bis.b #BIT7, &P2OUT       ; Turn LED on 2.7 ON ( player1 win.)
	jmp finito1

ifPlayer2Won: ; do nothing
	jmp finito1

player2Winsbynotpressing:
	mov.w #2, r4
	bis.b #BIT4, &P2OUT  ; Turn LED on 2.4 ON ( player2 win.)
	jmp finito1

finito1:
	bic.b #00000100b, &P1IFG
	reti



PLR_2:
	cmp.w #1, r4 ; diger oyuncu kazandiysa
	jeq ifPlayer1Won

	cmp.w #3, r6
	jeq player1Winsbynotpressing

	cmp.w #2, r6
	jeq player1Winsbynotpressing

	cmp.w #1, r6
	jeq player1Winsbynotpressing

	cmp.w #0, r6 ; dash
	jeq player2Winsbypressing

player1Winsbynotpressing:
	mov.w #1, r4
	bis.b #BIT7, &P2OUT       ; Turn LED on 2.7 ON ( player1 win.)
	jmp finito2

ifPlayer1Won: ; do nothing
	jmp finito2

player2Winsbypressing:
	mov.w #2, r4
	bis.b #BIT4, &P2OUT ; Turn LED on 2.4 ON ( player2 win.)
	jmp finito2

finito2:
	bic.b #00100000b, &P2IFG ; flag temizle don
	reti
;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack

;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
; Port 2 = 0xFFE2 -> .int02
	.sect ".int02"
	.short PLR_1

; Port 1 = 0xFFE4 -> .int04
	.sect ".int03"
	.short PLR_2

; Reset Vector = 0xFFFE -> .reset (zaten doğru)
	.sect ".reset"
	.short RESET
